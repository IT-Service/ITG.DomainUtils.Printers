#
# Манифест модуля для модуля "ITG.DomainUtils.Printers".
#
# Создано: Sergey S. Betke
#
# Дата создания: 13.10.2013
#
# Архив проекта: https://github.com/IT-Service/ITG.DomainUtils.Printers
#

@{

# Файл модуля скрипта или двоичного модуля, связанный с данным манифестом
RootModule = 'ITG.DomainUtils.Printers.psm1'

# Номер версии данного модуля.
ModuleVersion = '0.4'

# Уникальный идентификатор данного модуля
GUID = 'D8CF9F68-3B96-498A-BD04-33EA2B072BD0'

# Автор данного модуля
Author = 'Sergey S. Betke'

# Компания, создавшая данный модуль, или его поставщик
CompanyName = 'IT-Service.Nov.RU'

# Заявление об авторских правах на модуль
Copyright = '(c) 2013 Sergey S. Betke. All rights reserved.'

# Описание функций данного модуля
Description = @'
Данный модуль предоставляет набор командлет для автоматизации ряда операций с публикацией принтеров в домене Windows.

Использование функционала модуля
--------------------------------

В первую очередь необходимо подключить модуль:

	Import-Module ITG.DomainUtils.Printers;

До начала использования модуля необходимо инициализировать конфигурацию модуля.
Структура модуля поддерживает и локализовать используемые идентификаторы групп и объектов групповой политики,
и тип контейнера для групп безопасности. Однако, всеми администраторами должны использоваться общие параметры,
поэтому они сохраняются в AD. Для их инициализации и необходимо вызвать **один раз** следующий командлет:

	Initialize-DomainUtilsPrintersConfiguration -Verbose;

Опять-таки, **один раз** до начала использования модуля для создания контейнера, в котором будут размещаться
объекты групп безопасности, используемые очередями печати, необходимо вызвать следующий командлет:

	Initialize-ADPrintQueuesEnvironment;

Ну а далее - можно ограничиться одной строкой при регулярном использовании:

	Get-ADPrintQueue | Update-ADPrintQueueEnvironment -Verbose;

Данная инструкция для всех очередей печати, опубликованных в AD, создаёт группы безопасности (пользователи и операторы),
объекты GPO для них и назначает необходимые права на объекты GPO. В случае наличия групп и GPO командлет не изменяет их.

P.S. Естественно, указанные действия можно выполнить и для конкретного принтера, указав в `Get-ADPrintQueue` параметр `-Filter`.

По умолчанию группы безопасности будут созданы в контейнере "Принтеры", и именоваться "Принтер <имя очереди печати> - пользователи" и 
"Принтер <имя очереди печати> - операторы".

**Важно!** Данный модуль подразумевает, что при именовании очередей печати (в имени общего ресурса для принтера) Вы используете уникальные
идентификаторы, и ни для каких двух разных принтеров эти идентификаторы не будут повторяться.

Объекты групповой политики создаются и именуются "itg Принтер <имя очереди печати>", но не связываются автоматически ни с одним OU. Поэтому
после выполнения приведённого выше кода Вам необходимо самостоятельно связать их с необходимым Вам OU. Например, следующим образом:

	Get-ADPrintQueue `
	| Get-ADPrintQueueGPO `
	| Set-GPLink `
		-Target 'OU=Новгородский филиал,OU=ФБУ \"Тест-С .-Петербург\",DC=csm,DC=nov,DC=ru' `
		-LinkEnabled Yes `
		-Verbose `
	;

Или же выполнить данные действия с помощью консоли. 

Созданные объекты групповой политики предоставляют право членам группы "Принтер ... - пользователи" применения групповой политики, и только
членам данной группы право применения политики и предоставлено. Включая необходимых Вам пользователей в данную группу Вы получите следующие
результаты:

- при применении политики пользователю будет "подключен" сетевой принтер
- пользователь будет иметь право печати на данном принтере

Группа "Принтер ... - операторы" не получает права применения политики, поэтому принтер членам данной группы автоматически подключен не
будет. Члены данной группы получат право управления документами в очереди печати, в том числе - и чужими (удаление документов, изменение
приоритетов, очистка очереди печати).

На данный момент в стадии разработки набор командлет для публикации локальных принтеров в AD с применением необходимых прав доступа
к публикуемым принтерам.


Тестирование модуля и подготовка к публикации
---------------------------------------------

Для сборки модуля использую проект [psake](https://github.com/psake/psake). Для инициирования сборки используйте сценарий `build.ps1`.
Для модульных тестов использую проект [pester](https://github.com/pester/pester).

'@

# Минимальный номер версии обработчика Windows PowerShell, необходимой для работы данного модуля
PowerShellVersion = '3.0'

# Имя узла Windows PowerShell, необходимого для работы данного модуля
PowerShellHostName = ''

# Минимальный номер версии узла Windows PowerShell, необходимой для работы данного модуля
PowerShellHostVersion = ''

# Минимальный номер версии компонента .NET Framework, необходимой для данного модуля
DotNetFrameworkVersion = '4.0'

# Минимальный номер версии среды CLR (общеязыковой среды выполнения), необходимой для работы данного модуля
CLRVersion = '4.0'

# Архитектура процессора (нет, X86, AMD64, IA64), необходимая для работы модуля
ProcessorArchitecture = ''

# Модули, которые необходимо импортировать в глобальную среду перед импортированием данного модуля
RequiredModules = @(
	@{ ModuleName = 'ActiveDirectory'; ModuleVersion = '1.0'; } `
	, @{ ModuleName = 'GroupPolicy'; ModuleVersion = '1.0'; } `
	, @{ ModuleName = 'GroupPolicy'; ModuleVersion = '1.0'; } `
	, @{ ModuleName = 'PrintManagement'; ModuleVersion = '1.0'; } `
)

# Сборки, которые должны быть загружены перед импортированием данного модуля
RequiredAssemblies = @(
	'System.Printing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' `
)

# Файлы скрипта (.ps1), которые запускаются в среде вызывающей стороны перед импортированием данного модуля
ScriptsToProcess = @()

# Файлы типа (.ps1xml), которые загружаются при импорте данного модуля
TypesToProcess = @()

# Файлы формата (PS1XML-файлы), которые загружаются при импорте данного модуля
FormatsToProcess = @()

# Модули для импортирования в модуль, указанный в параметре ModuleToProcess, в качестве вложенных модулей
NestedModules = @()

# Функции для экспорта из данного модуля
FunctionsToExport = '*'

# Командлеты для экспорта из данного модуля
CmdletsToExport = '*'

# Переменные для экспорта из данного модуля
VariablesToExport = '*'

# Псевдонимы для экспорта из данного модуля
AliasesToExport = '*'

# Список всех модулей, входящих в пакет данного модуля
ModuleList = @()

# Список всех файлов, входящих в пакет данного модуля
FileList = `
	'ITG.DomainUtils.Printers.psm1' `
,   'ITG.DomainUtils.Printers.psd1' `
,	'ITG.DomainUtils.Printers.Configuration.psm1' `
,	'ITG.DomainUtils.Printers.ps1' `
,	'ITG.DomainUtils.LocalPrinters.ps1' `
,	'ITG.DomainUtils.LocalPrintersGroups.ps1' `
;

# Личные данные, передаваемые в модуль, указанный в параметре ModuleToProcess
PrivateData = @{
	ReadmeURL = 'https://github.com/IT-Service/ITG.DomainUtils.Printers';
}

}